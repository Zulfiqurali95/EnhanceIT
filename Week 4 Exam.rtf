{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 Times-Roman;
\f3\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red31\green31\blue31;\red255\green255\blue255;\red44\green44\blue44;
\red27\green31\blue34;}
{\*\expandedcolortbl;;\cssrgb\c16078\c16078\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c22745\c22745\c22745;
\cssrgb\c14118\c16078\c18039;}
\margl1440\margr1440\vieww14520\viewh11200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc\partightenfactor0

\f0\b\fs36 \cf0 WEEK 4 EXAM
\f1\b0 \
\
Answer the given questions below in a short answer format.\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf0 \expnd0\expndtw0\kerning0
\
Zulfiqur Ali\
\
1. Explain what is a protocol and why do we use them?\
A protocol defines a blueprint of methods, properties, and other requirements that suit a particular task or piece of functionality\
\
2. What is a REST-api?\
REST (Representational State Transfer) is an architectural style for designing distributed systems. It is not a standard but a set of constraints, such as being stateless, having a client/server relationship, and a uniform interface\
\
3. How do we get data from it?\
Every REST API offers a series of URLs to fetch, create, update, and delete data on a server. These are unique to each API. Their structure depends on the choices made by the developers that created the API.\
\
4. What are the different ways we can handle multithreading in iOS?\
Multithreading is a pattern to increase the performance of an application and scheduling work on multiple threads, more work can be performed in parallel.Now all iOS devices have a multi-core processor that allows developers to execute multiple tasks in parallel. Multithreading can be handled through two ways: Grand Central and NSOperation.\
\
5. What is Core Data?\
Core Data is cacheing data on a single device or synchronizing data on multiplying devices with CloudKit. This allows data persistence even when an application is closed.\
\
6. What are other ways that you have used Data Persistency?\
UserDefaults , Keychain, CoreData\
\
7. How do you make CoreData Thread Safe?\
to make CoreData thread-safe, avoid processing the data in the main queue on anything user-related.\
\
8. What are the different ways we can unwrap an optional?\
use try-catch blocks to catch nil values.\
\
9. How would you go about creating your own data structure to take the place of an optionals if they didn\'92t already exist in Swift?\
\
9. What is a retain cycle? How do we avoid them?\
A retain cycle is a memory leak caused by two strong variables that  address each other. We can avoid these cycles by removing the "choice" between a struct or class, using Protocols, and using closers with unowned self.\
\
10. How are dispatch groups implemented?\
Dispatch groups are implemented between enter() and leave() function calls.\
\
\
11. What is Autolayout?\
Autolayout is dynamic calculator that automatically calculates the size and position of all views in the view hierarchy based on user-defined constraints on those views.\
\
12. What is a closure? What is the difference between an escaping and non-escaping closure?\
A closure is an anonymous function. It has no name but can be passed around anywhere  in the code. An escaping closure is a closure that is passed into a function's  arguments but is called after the function returns. Meanwhile, a non-escaping  closure is called prior to the function return.\
\
13. 
\f1\fs28 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb3 What are lazy properties, how do they work?\
The lazy property makes a variable only initialize when it is requested, which ultimately saves processing power.\
\
14. What are property observers?\
\
Property observers are blocks of code that execute whenever they "observe"  that a property has been changed. Two property observers are named didSet and  willSet.\
\
\
15. What\'92s the application and controller lifecycle?\
Not running, Inactive, Active , background, suspended\
\
16. How would you store sensitive user data?\
\
We can store sensitive user data using Keychains.\
\
17. \AppleTypeServices \cf4 What is a Guard statement?\
The guard keyword is a keyword that enables early return statements and allows  optionals to remain in scope if unwrapped by the keyword.\
\
18. \cf5 What is a 
\f3\i Serial Queue
\f1\i0 ?\
A serial Dispatch Queue is a queue that performs only one task at a time to  prevent data races. Serial Queues are often used to access a specific value  or resource.\cf4 \
\
19. What is the difference between strong, weak, & unowned? When do we use them?\
These keywords are usually used when talking about references. A "strong" reference  increments the reference count by one. A "weak" reference does not increment the reference count and can reference nil. An "unowned" reference does not increment  the reference count but does not reference nil when accessed. We use these  *     keywords to circumvent the problem of retain cycles mentioned above.\
\
20. 
\f2\fs32 \cf0 \cb1  How do we create Singletons in Swift?\
Singletons can be created by defining global variables and giving the static property  to a variable.\
\
\
\
\
}